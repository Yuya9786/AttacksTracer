package malwaresimulator

import akka.actor.typed.ActorSystem
import malwaresimulator.engine.Initiator
import org.slf4j.LoggerFactory
import malwaresimulator.solvers.Solver

import scala.util.control.NonFatal


object Main {
  val logger = LoggerFactory.getLogger("malwaresimulator.Main")

  def main(args: Array[String]): Unit = {
    val system = ActorSystem(Initiator.start, "root")
    val solver = Solver(system)
    try {
      init(system, solver)
    } catch {
      case NonFatal(e) =>
        logger.error("Terminating due to initialization failure.", e)
        system.terminate()
    }
  }

  def init(system: ActorSystem[Initiator.Command], solver: Solver): Unit = {
    val grpcInterface =
      system.settings.config.getString("malware-simulator.grpc.interface")
    val grpcPort =
      system.settings.config.getInt("malware-simulator.grpc.port")
    val grpcService = new MalwareSimulatorServerImpl(system, solver)
    MalwareSimulatorServer.start(
      grpcInterface,
      grpcPort,
      system,
      grpcService
    )
  }
}
