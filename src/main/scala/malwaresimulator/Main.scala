package malwaresimulator

import akka.actor.typed.ActorSystem
import org.slf4j.LoggerFactory
import malwaresimulator.interface.Solver

import scala.util.control.NonFatal


object Main {

  val logger = LoggerFactory.getLogger("malwaresimulator.Main")

  def main(args: Array[String]): Unit = {
    val root = ActorSystem(Initiator.start, "root")
    try {
      Solver.apply(root)
    } catch {
      case NonFatal(e) =>
        logger.error("Terminating due to initialization failure.", e)
        root.terminate()
    }

//    try {
//      init(system)
//    } catch {
//      case NonFatal(e) =>
//        logger.error("Terminating due to initialization failure.", e)
//        system.terminate()
//    }
  }

//  def init(system: ActorSystem[MalwareSimulatorSupervisor.Operation]): Unit = {
//    val grpcInterface =
//      system.settings.config.getString("malware-simulator.grpc.interface")
//    val grpcPort =
//      system.settings.config.getInt("malware-simulator.grpc.port")
//    val grpcService = new MalwareSimulatorServerImpl(system)
//    MalwareSimulatorServer.start(
//      grpcInterface,
//      grpcPort,
//      system,
//      grpcService
//    )
//  }
}
