package malwaresimulator.engine.core

case class Datagram(srcAddress: InetAddress, srcPort: Int, dstAddress: InetAddress, dstPort: Int, value: Data, nexthop: InetAddress = null, option: Any = null) extends Message.NodeCommand with Message.NetworkCommand

abstract class Data {
  def datagram(srcAddress: InetAddress,  srcPort: Int,
               destAddress: InetAddress, destPort: Int,
               nexthop: InetAddress = null, option: Any = null): Datagram
}

case class Raw(value: Array[Byte]) extends Data {
  def datagram(srcAddress: InetAddress,  srcPort: Int,
               destAddress: InetAddress, destPort: Int,
               nexthop: InetAddress = null, option: Any = null): Datagram = {
    Datagram(srcAddress, srcPort, destAddress, destPort, this, nexthop, option)
  }
}

abstract class Protocol(val defaultProtocolPort: Int) extends Data {
  def datagram(srcAddress: InetAddress,  srcPort: Int,
               destAddress: InetAddress, destPort: Int = defaultProtocolPort,
               nexthop: InetAddress = null, option: Any = null): Datagram = {
    Datagram(srcAddress, srcPort, destAddress, destPort, this, nexthop, option)
  }
}

case class Http(headersMap: Map[String, String], body: Any) extends Protocol(80)

case class Https(headersMap: Map[String, String], body: Any) extends Protocol(443)

//case class Smtp(val mail: Mail, val destAddress: InetAddress) extends Protocol(25)
//
//case class Pop(val user: String, val mails: List[Mail]) extends Protocol(110)
//
//case class Smb(val header: String, val body: List[File]) extends Protocol(445)

case class SmbAuth(header: String, id: String, password: String) extends Protocol(445)
