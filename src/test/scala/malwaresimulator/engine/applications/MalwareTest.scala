//package malwaresimulator.engine.applications
//
//import akka.actor.testkit.typed.scaladsl.ScalaTestWithActorTestKit
//import malwaresimulator.{Network, NodeAddress}
//import malwaresimulator.engine.core.Network.AddNode
//import malwaresimulator.engine.core.{Http, InetAddress}
//import malwaresimulator.engine.nodes.Node
//import malwaresimulator.engine.nodes.Node.{Infect, MakeConnection, NodeCommand}
//import org.scalatest.wordspec.AnyWordSpecLike
//
//import scala.collection.mutable.ListBuffer
//
//class MalwareTest extends ScalaTestWithActorTestKit with AnyWordSpecLike {
//  "Malware actor" must {
//    "reply a network search result" in {
//      val probe = createTestProbe[NodeCommand]()
//      val network = spawn(Network(0, "network1", InetAddress("10.0.0.0"), 24))
//      val node = spawn(Node(1, "computer1", InetAddress("10.0.0.3")))
//      node ! MakeConnection(InetAddress("10.0.0.3"), 24, network)
//
//      network ! AddNode(probe.ref, InetAddress("10.0.0.2"))
//      network ! AddNode(node, InetAddress("10.0.0.3"))
//
//      node ! Infect("TestMalware", InetAddress("10.0.0.2"))
//
//      probe.expectMessage(
//        Http(
//          Map("request" -> "POST", "payload" -> "search"),
//          List(NodeAddress(probe.ref, InetAddress("10.0.0.2")), NodeAddress(node, InetAddress("10.0.0.3")))
//        ).datagram(InetAddress("10.0.0.3"), 49152, InetAddress("10.0.0.2"), 80)
//      )
//    }
//  }
//}
